# Ethereum MEV Blocks Analysis Project

This project includes several Python scripts that manage and analyze Ethereum MEV block data. 

Additionally, Jupyter Notebook versions of the MEV_boost_EDA, MEV_boost_ML, and feature_select scripts are provided for easier viewing and interaction. During the development phase, the Spyder IDE was primarily used, offering a convenient variable explorer for debugging and enhancing model training speed. This choice is particularly important as the dataset exceeds 3 million entries, which can strain the Jupyter kernel and slow down processing.


## Current Status

- The `get_parquet.py` script has completed execution. The output file is stored in the `data` folder.
- The `data_process.py` script has been imported into other programs and does not need to be run independently.
- The images generated by the `MEV_boost_EDA.py` and `MEV_boost_ML.py` scripts are stored in the `graphs` folder.


## Scripts Description

### `get_parquet.py`
- **Purpose**: Verifies the format of the file `ethereum_mev_blocks_19580000_to_19589999.parquet`.
- **Functionality**:
  - Performs basic data processing.
  - Saves the processed data as a CSV file.

### `data_process.py`
- **Purpose**: Handles data cleaning and feature engineering.
- **Functionality**:
  - Processes the payload data to identify the winning bids within the bids data.
  - Stores the results in a DataFrame called `matched_df`.

### `MEV_boost_EDA.py`
- **Purpose**: Performs statistical analysis on various datasets.
- **Functionality**:
  - Analyzes the `bids data`, `payload data`, and `matched_df` DataFrame.
  - Provides insights and visualizations to understand the characteristics and distributions within these datasets.

### `MEV_boost_ML.py`
- **Purpose**: Dedicated to model training, evaluation, and optimisation.
- **Functionality**:
  - Uses cleaned and processed data to train machine learning models.
  - Evaluates the model performances.
  - Chooses best hyperparameters and slot ranges.


## Dataset Sources

The data used in this project is sourced from the following:

- **Eden Public Data**: [Eden Network Public Data Overview](https://docs.edennetwork.io/public-data/overview/)
- **MEV-Boost Winning Bid Data**: [MEV-Boost Data Repository](https://github.com/dataalways/mevboost-data?tab=readme)

This repository contains a collection of public domain Ethereum MEV-Boost winning bid data.


## Installation

Ensure you have Python 3.6+ installed. You can install the required dependencies via pip:

```bash
pip install pandas numpy matplotlib seaborn sklearn
